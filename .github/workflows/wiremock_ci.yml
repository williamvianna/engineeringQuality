name: üîå CI - Configura√ß√µes de Mocking (WireMock)

on:
  push:
    branches: [ main ]
    paths:
      # Roda a pipeline somente se houver mudan√ßas na pasta 'wiremock' ou no pr√≥prio workflow
      - 'wiremock/**'
      - '.github/workflows/wiremock_ci.yml'

jobs:
  validate_wiremock_config:
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Checkout do C√≥digo
        uses: actions/checkout@v4

      - name: ‚òï Configurar Java (v17)
        # WireMock √© um JAR que roda em Java e requer o JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: üèÉ Valida√ß√£o de Sanidade do WireMock
        # Esta step simula o comando de inicializa√ß√£o, validando se o JAR e as configs existem.
        # Adicione o comando real se voc√™ mantiver o JAR no repo, ou use Maven/Gradle se for biblioteca.
        run: |
          echo "Verificando se o JAR do WireMock e as configura√ß√µes JSON est√£o acess√≠veis..."
          # Exemplo de comando se voc√™ tiver o JAR salvo (MUITO GRANDE para GitHub)
          # java -jar wiremock-standalone.jar --port 8080 --root-dir src/main/resources &
          
          # Alternativa: Apenas checa se os arquivos essenciais est√£o na pasta
          test -d src/main/resources/mappings || { echo "ERRO: Pasta 'mappings' n√£o encontrada."; exit 1; }
          
          echo "Configura√ß√µes WireMock validadas. A sintaxe JSON √© validada durante a inicializa√ß√£o (se executado)."
        working-directory: wiremock